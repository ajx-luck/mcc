--------------------------------------------------------------------------
----------------        Basic Variable       -----------------------------
---------------- Do not edit                 -----------------------------
--------------------------------------------------------------------------
local current_weapon = "none"
local current_weapon_speed = 100
local current_weapon_intervals = 30.0
local shoot_duration = 0.0
local coefficient = 1.0
local current_weapon_recoil = 0.0
local recoil_recovery = 9.0
local current_sleep_time = 0

--------------------------------------------------------------------------
----------------        Basic Setting       ------------------------------
--------------------------------------------------------------------------

---- key bind ----

local ump9_key = 8
local akm_key = 5
local m16a4_key = 4
local uzi_key = nil
local m416_key = 7
local scarl_key = 9
local set_off_key = 6


---- fire key ----

local fire_key = "Pause"
local mode_switch_key = "capslock"


--- Sensitivity in Game
--- default is 50.0

local target_sensitivity = 50.0
local scope_sensitivity = 50.0
local scope4x_sensitivity = 50.0

---- Shooting delay setting
---- Two firing time intervals = weapon_speed * interval_ratio * ( 1 + random_seed * ( 0 ~ 1))

local interval_ratio = 0.2
local random_seed = 0.05
--------------------------------------------------------------------------
----------------        Recoil Table        ------------------------------
---------------- You can fix the value here ------------------------------
--------------------------------------------------------------------------

local recoil_table = {}

recoil_table["ump9"] = {
    basic={18,19,18,19,18,19,19,21,23,24,23,24,23,24,23,24,23,24,23,24,23,24,24,25,24,25,24,25,24,25,24,25,25,26,25,26,25,26,25,26,25,26,25,26,25,26},
    quadruple={83.3,83.3,83.3,83.3,83.3,83.3,83.3,116.7,116.7,116.7,116.7,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3},
    speed = 92
}

recoil_table["akm"] = {
    basic={23.7,23.7,23.7,23.7,23.7,23.7,23.7,23.7,23.7,23.7,23.7,28,28,28,28,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7,29.7},
    quadruple={66.7,66.7,66.7,66.7,66.7,66.7,66.7,66.7,66.7,66.7,66.7,123.3,123.3,123.3,123.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3},
    speed = 100
}

recoil_table["m16a4"] = {
    basic={25,25,25,29,33,33,32,33,32,32,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30},
    quadruple={86.7,86.7,86.7,86.7,86.7,86.7,86.7,150,150,150,150,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120},
    speed = 75
}

recoil_table["m416"] = {
    basic={21,21,21,21,21,21,21,21,21,23,23,24,23,24,25,25,26,27,27,32,31,31,31,31,31,31,31,32,32,32,35,35,35,35,35,35,35,35,35,35,35},
    quadruple={86.7,86.7,86.7,86.7,86.7,86.7,86.7,150,150,150,150,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7},
    speed = 86
}

recoil_table["scarl"] = {
    basic={20,21,22,21,22,22,23,22,23,23,24,24,25,25,25,25,26,27,28,29,30,32,34,34,35,34,35,34,35,34,35,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35},
    quadruple={86.7,86.7,86.7,86.7,86.7,86.7,86.7,150,150,150,150,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7},
    speed = 96
}

recoil_table["uzi"] = {
    basic={16,17,18,20,21,22,23,24,25,26,28,30,32,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34},
    quadruple={13.3,13.3,13.3,13.3,13.3,21.7,21.7,21.7,21.7,21.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7},
    speed = 48
}

recoil_table["none"] = {
    basic={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    quadruple={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    speed = 60
}

--------------------------------------------------------------------------
----------------          Function          ------------------------------
--------------------------------------------------------------------------

function recoil_mode()
    if IsKeyLockOn(mode_switch_key) then
        return "quadruple"
    else
        return "basic"
    end
end

function recoil_value(_weapon,_duration,_coefficient)
    local _mode = recoil_mode()
    local step = (math.floor(_duration/recoil_table[_weapon]["speed"])) + 1
    if step > 40 then
        step = 40
    end
    return recoil_table[_weapon][_mode][step]*interval_ratio * ( 1 + random_seed * math.random())
end


--------------------------------------------------------------------------
----------------          OnEvent          ------------------------------
--------------------------------------------------------------------------


function OnEvent(event, arg)
    OutputLogMessage("event = %s, arg = %d\n", event, arg)
    if(IsKeyLockOn("scrolllock")) then
        EnablePrimaryMouseButtonEvents(true)

        if (event == "MOUSE_BUTTON_PRESSED" and arg == akm_key) then
            current_weapon = "akm"
        elseif (event == "MOUSE_BUTTON_PRESSED" and arg == m16a4_key) then
            current_weapon = "m16a4"
        elseif (event == "MOUSE_BUTTON_PRESSED" and arg == m416_key) then
            current_weapon = "m416"
        elseif (event == "MOUSE_BUTTON_PRESSED" and arg == ump9_key) then
            current_weapon = "ump9"
        elseif (event == "MOUSE_BUTTON_PRESSED" and arg == uzi_key) then
            current_weapon = "uzi"
        elseif (event == "MOUSE_BUTTON_PRESSED" and arg == scarl_key) then
            current_weapon = "scarl"
        elseif (event == "MOUSE_BUTTON_PRESSED" and arg == 1) then
            -- button 1 : Shoot
            shoot_duration = 0.0
            --当前武器的速度
            current_weapon_speed = recoil_table[current_weapon]["speed"]
            OutputLogMessage("current_weapon_speed = %s\n", current_weapon_speed)
            repeat

                coefficient = interval_ratio * ( 1 + random_seed * math.random())
                --coefficnt_weapon_intervals = math.floor(coefficient  * current_weapon_speed)
                --currentient = current_weapon_speed/1000
                OutputLogMessage("coefficient = %s\n", coefficient)

                current_weapon_intervals = current_weapon_speed*coefficient
                OutputLogMessage("current_weapon_intervals = %s\n", current_weapon_intervals)

                recoil_recovery = recoil_value(current_weapon,shoot_duration,coefficient)
                --OutputLogMessage("current_weapon_recoil = %s\n", current_weapon_recoil)

                --recoil_recovery = current_weapon_recoil * current_weapon_intervals / 100
                OutputLogMessage("recoil_recovery = %s\n", recoil_recovery)
                OutputLogMessage("current_sleep_time = %s\n", current_sleep_time)
			    PressAndReleaseKey(fire_key)
                if(current_sleep_time*current_weapon_intervals >= current_weapon_speed) then
                    --PressAndReleaseKey(fire_key)
                    current_sleep_time = 0
                else
    		            if IsMouseButtonPressed(2) then
                        recoil_recovery = recoil_recovery / (target_sensitivity / 50.0)
                	    elseif recoil_mode() == "basic" then
                    		recoil_recovery = recoil_recovery / (scope_sensitivity / 50.0)
                		elseif recoil_mode() == "quadruple" then
                    		recoil_recovery= recoil_recovery / (scope4x_sensitivity / 50.0)
                		end
                		OutputLogMessage("recoil_recovery = %s\n", recoil_recovery)
                        MoveMouseRelative(0, recoil_recovery )
                end

                current_sleep_time = current_sleep_time + 1
                Sleep(current_weapon_intervals)

                shoot_duration = shoot_duration + current_weapon_intervals
                OutputLogMessage("--------------------------\n")
            until not IsMouseButtonPressed(1)

        end
    else
	    if (event == "MOUSE_BUTTON_PRESSED" and arg == 1) then
            PressKey(fire_key)
	    elseif (event == "MOUSE_BUTTON_RELEASED" and arg == 1) then
            ReleaseKey(fire_key)
        end
    end
end